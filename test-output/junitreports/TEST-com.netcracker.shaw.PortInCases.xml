<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="ws-16393" failures="1" tests="16" name="com.netcracker.shaw.PortInCases" time="24.916" errors="0" timestamp="2023-01-24T15:30:31 IST" skipped="15">
  <testcase classname="com.netcracker.shaw.PortInCases" name="Ported_Num_Disconnect_After_TN_Change" time="24.916">
    <failure message="For input string: &quot;BK&quot; under radix 16 expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: For input string: "BK" under radix 16 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at com.netcracker.shaw.at_shaw_sd.pageobject.LandingPage.Login(LandingPage.java:69)
at com.netcracker.shaw.PortInCases.Ported_Num_Disconnect_After_TN_Change(PortInCases.java:2362)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- Ported_Num_Disconnect_After_TN_Change -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Activate_Ph_PortinTN_DRing_LSCNotReceived_AlarmNO">
    <skipped/>
  </testcase> <!-- Activate_Ph_PortinTN_DRing_LSCNotReceived_AlarmNO -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Convert_PhNative_Ported_LSC_Cmpltd_DueDate_Reach_Cancle_Porting">
    <skipped/>
  </testcase> <!-- Convert_PhNative_Ported_LSC_Cmpltd_DueDate_Reach_Cancle_Porting -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Activation_PortedTN_LifelineAlarm_No">
    <skipped/>
  </testcase> <!-- Activation_PortedTN_LifelineAlarm_No -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="ActivatePh_nativeTN_DRing_PortinTN_LSC_not_received">
    <skipped/>
  </testcase> <!-- ActivatePh_nativeTN_DRing_PortinTN_LSC_not_received -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Port_PhoneNumber_DistinctiveRing">
    <skipped/>
  </testcase> <!-- Port_PhoneNumber_DistinctiveRing -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Activation_PortedTN_LifelineAlarm_Yes">
    <skipped/>
  </testcase> <!-- Activation_PortedTN_LifelineAlarm_Yes -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Porting_LifelineYes_ShawService_ReqestYes">
    <skipped/>
  </testcase> <!-- Porting_LifelineYes_ShawService_ReqestYes -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="ActivatePh_PortIN_TNs_TechRetry_LSC_came_beforeTR">
    <skipped/>
  </testcase> <!-- ActivatePh_PortIN_TNs_TechRetry_LSC_came_beforeTR -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Porting_PhNbr_AlarmNo_Disconnection_Address_Yes_PortIn_Immediately">
    <skipped/>
  </testcase> <!-- Porting_PhNbr_AlarmNo_Disconnection_Address_Yes_PortIn_Immediately -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="PortIn_No_Retail_PickUp_Yes">
    <skipped/>
  </testcase> <!-- PortIn_No_Retail_PickUp_Yes -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Verify_FFM_Customer_Requested_Porting_PhoneLine">
    <skipped/>
  </testcase> <!-- Verify_FFM_Customer_Requested_Porting_PhoneLine -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Verify_FFM_Customer_Requested_Porting_Multiple_PhoneLines">
    <skipped/>
  </testcase> <!-- Verify_FFM_Customer_Requested_Porting_Multiple_PhoneLines -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Porting_LifeLine_No_TechAppointment_Yes">
    <skipped/>
  </testcase> <!-- Porting_LifeLine_No_TechAppointment_Yes -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Activate_Phone_Converged_NativeTN_PortedDR">
    <skipped/>
  </testcase> <!-- Activate_Phone_Converged_NativeTN_PortedDR -->
  <system-out/>
  <testcase classname="com.netcracker.shaw.PortInCases" name="Porting_LifeLineNo_ShawService_ReqestNo">
    <skipped/>
  </testcase> <!-- Porting_LifeLineNo_ShawService_ReqestNo -->
  <system-out/>
</testsuite> <!-- com.netcracker.shaw.PortInCases -->
